@use "../scss/variables" as *;
@use "../scss/mixins";

.modal {
  @include mixins.flex;
  @include mixins.sublayer(absolute);
  height: max-content;
  min-height: 100vh;
  min-width: $minPageWidth;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  padding: 5vh $defaultPadding;
  z-index: 10;
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.2s ease, visibility 0.2s;

  @media (max-width: 560px) {
    padding: 5vh $minPadding;
  }

  &_active {
    visibility: visible;
    opacity: 1;
  }

  &__overlay {
    @include mixins.sublayer;
    content: "";
    background-color: $overlayBackground;
  }

  &__container {
    @include mixins.flex(row);
    @include mixins.container;
    min-width: $maxPageWidth;
    height: max-content;
    background-color: $background;
    position: relative;
    border-radius: $defaultBorderRadius;

    @media (max-width: 1416px) {
      min-width: 100%;
    }

    @media (max-width: 910px) {
      padding: $midPadding;
    }

    @media (max-width: 560px) {
      border-radius: 30px;
    }
  }

  &__close {
    @include mixins.background("../images/x-circle-button.png", cover, center);
    @include mixins.link($secondary, $primaryLight, .5);
    width: 62px;
    height: 62px;
    position: absolute;
    top: $defaultPadding;
    right: $defaultPadding;

    @media (max-width: 910px) {
      width: 40px;
      height: 40px;
      top: $midPadding;
      right: $midPadding;
    }
    @media (max-width: 560px) {
      width: 30px;
      height: 30px;
      top: $minPadding;
      right: $minPadding;
    }
  }

  &__content {
    flex-grow: 1;
  }

  &__title {
    font-size: nth($mainFontSize, 3);
    margin: 0;

    @media (max-width: 910px) {
      font-size: nth($mainFontSize, 2);
    }

    @media (max-width: 560px) {
      font-size: nth($mainFontSize, 1);
    }
  }

  &__actions {
    @include mixins.flex(row);
    align-items: center;
    gap: $defaultPadding;
    margin-top: 60px;

    @media (max-width: 910px) {
      gap: calc($defaultPadding / 2);
      margin-top: 40px;
    }
  }

  &__loader {
    background: rgba(0, 0, 0, 0.5);
    z-index: 200;
    cursor: default;

    &_animation-active div {
      animation-play-state: running;
    }

    &_spinner {
      display: inline-block;
      position: relative;
      width: 80px;
      height: 80px;

      div {
        animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
        transform-origin: 40px 40px;
        animation-play-state: paused;

        &:after {
          content: "";
          display: block;
          position: absolute;
          width: 7px;
          height: 7px;
          border-radius: 50%;
          background: #fff;
          margin: -4px 0 0 -4px;
        }
      }

      // Генерация восьми элементов с задержкой и позицией
      @for $i from 1 through 8 {
        div:nth-child(#{$i}) {
          animation-delay: -#{($i * 0.036)}s;

          &:after {
            @if $i == 1 { top: 63px; left: 63px; }
            @else if $i == 2 { top: 68px; left: 56px; }
            @else if $i == 3 { top: 71px; left: 48px; }
            @else if $i == 4 { top: 72px; left: 40px; }
            @else if $i == 5 { top: 71px; left: 32px; }
            @else if $i == 6 { top: 68px; left: 24px; }
            @else if $i == 7 { top: 63px; left: 17px; }
            @else if $i == 8 { top: 56px; left: 12px; }
          }
        }
      }
    }
  }
}

@keyframes lds-roller {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
